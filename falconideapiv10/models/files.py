# -*- coding: utf-8 -*-

"""
    falconideapiv10.models.files

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""


class Files(object):

    """Implementation of the 'files' model.

    TODO: type model description here.

    Attributes:
        example_attachment_1_txt (string): TODO: type description here.
        example_attachment_2_txt (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "example_attachment_1_txt" : "example_attachment1.txt",
        "example_attachment_2_txt" : "example_attachment2.txt"
    }

    def __init__(self,
                 example_attachment_1_txt=None,
                 example_attachment_2_txt=None):
        """Constructor for the Files class"""

        # Initialize members of the class
        self.example_attachment_1_txt = example_attachment_1_txt
        self.example_attachment_2_txt = example_attachment_2_txt


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        example_attachment_1_txt = dictionary.get("example_attachment1.txt")
        example_attachment_2_txt = dictionary.get("example_attachment2.txt")

        # Return an object of this model
        return cls(example_attachment_1_txt,
                   example_attachment_2_txt)


