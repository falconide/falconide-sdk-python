# -*- coding: utf-8 -*-

"""
    falconideapiv10.models.emailv_1

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
"""
import falconideapiv10.models.email_details
import falconideapiv10.models.settings
import falconideapiv10.models.attributes
import falconideapiv10.models.files

class Emailv1(object):

    """Implementation of the 'Emailv1' model.

    TODO: type model description here.

    Attributes:
        api_key (string): Your secret API Key
        email_details (EmailDetails): TODO: type description here.
        x_apiheader (list of string): TODO: type description here.
        settings (Settings): TODO: type description here.
        recipients (list of string): TODO: type description here.
        attributes (Attributes): TODO: type description here.
        files (Files): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "api_key" : "api_key",
        "email_details" : "email_details",
        "x_apiheader" : "X-APIHEADER",
        "settings" : "settings",
        "recipients" : "recipients",
        "attributes" : "attributes",
        "files" : "files"
    }

    def __init__(self,
                 api_key=None,
                 email_details=None,
                 x_apiheader=None,
                 settings=None,
                 recipients=None,
                 attributes=None,
                 files=None):
        """Constructor for the Emailv1 class"""

        # Initialize members of the class
        self.api_key = api_key
        self.email_details = email_details
        self.x_apiheader = x_apiheader
        self.settings = settings
        self.recipients = recipients
        self.attributes = attributes
        self.files = files


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        api_key = dictionary.get("api_key")
        email_details = falconideapiv10.models.email_details.EmailDetails.from_dictionary(dictionary.get("email_details")) if dictionary.get("email_details") else None
        x_apiheader = dictionary.get("X-APIHEADER")
        settings = falconideapiv10.models.settings.Settings.from_dictionary(dictionary.get("settings")) if dictionary.get("settings") else None
        recipients = dictionary.get("recipients")
        attributes = falconideapiv10.models.attributes.Attributes.from_dictionary(dictionary.get("attributes")) if dictionary.get("attributes") else None
        files = falconideapiv10.models.files.Files.from_dictionary(dictionary.get("files")) if dictionary.get("files") else None

        # Return an object of this model
        return cls(api_key,
                   email_details,
                   x_apiheader,
                   settings,
                   recipients,
                   attributes,
                   files)


